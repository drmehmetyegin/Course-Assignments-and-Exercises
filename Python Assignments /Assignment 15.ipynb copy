{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "47d7b82d",
   "metadata": {},
   "source": [
    "Task : Print the prime numbers which are between 1 to entered limit number (n).\n",
    "\n",
    "You can use a nested for loop.\n",
    "Collect all these numbers into a list\n",
    "The desired output for n=100 :\n",
    "\n",
    "[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59,\n",
    "61, 67, 71, 73, 79, 83, 89, 97]\n",
    "Note that : This question is famous on the web, so to get more benefit from this assignment, try to complete this task on your own."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "8eb4d1bf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter a limit for the list:100\n",
      "[2, 4]\n"
     ]
    }
   ],
   "source": [
    "n=int(input(\"Enter a limit for the list:\"))\n",
    "prime=[2]\n",
    "counter=0\n",
    "x=2\n",
    "while x<n:\n",
    "    for i in range(2,n):\n",
    "        if x %i==0:\n",
    "            counter+=1\n",
    "            x+=1\n",
    "            if counter==2:\n",
    "                prime.append(x)\n",
    "            elif counter>2:\n",
    "                break\n",
    "print(prime)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "df6416f5",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "164ea750",
   "metadata": {},
   "source": [
    "x=int(input('Please enter a number:'))\n",
    "\n",
    "if x>3:\n",
    "\n",
    "    for i in range(2, x//2):\n",
    "\n",
    "        if x % i == 0:\n",
    "\n",
    "            print(f'{x} is not a prime number.')\n",
    "\n",
    "            break\n",
    "\n",
    "    else:\n",
    "\n",
    "        print(f'{x} is a prime number.')\n",
    "\n",
    "elif x>0 :\n",
    "\n",
    "    print(f'{x} is a prime number and you should already know that.')     \n",
    "\n",
    "else:\n",
    "\n",
    "    print(f'{x} is out of range.') "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
